@using SeaBase.Models
@model SeaBase.ViewModel.ApplicantVM

<div class="panel panel-default">
    <div class="panel-heading">Trainings & Other Certificates</div>
    <div class="panel-body">


        <div class="tab-content">
            <table id="data-table-training_certificate" class="table table-bordered table-hover">
                <thead>
                    <tr>
                        <th>Course</th>
                        <th>Institution</th>
                        <th>Certificate No.</th>
                        <th>Issue Date</th>
                        <th>Expiry Date</th>
                        <th>Place</th>
                        <th>Issued By</th>
                        <th>SCTW Code</th>
                        <th>MLC</th>
                        <th>File</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>


<!-- #region modal -->

<div class="modal fade" id="AddOrEditTrainings">
    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="modal-title"></h4>
            </div>
            <div class="modal-body">

                <form id="trainingcertificates" method="post" name="trainingcertificates">
                    <div class="row-fluid">
                        <input type="hidden" id="Idtc" name="Idtc" />
                        <div class="form-group col-md-12">
                            <label>Course / Trainings:</label>
                            @Html.DropDownList("tcSeminarId", new SelectList(Model.Seminars, "Id", "SeminarName"), "Select Course/Trainings", new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-12">
                            <label>Institutions/Training Centers:</label>
                            @Html.DropDownList("tcTrainingCenterId", new SelectList(Model.TrainingCenters, "Id", "TrainingCenterName"), "Select Institutions/Training Centers", new { @class = "form-control" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Certificate No.</label>
                            <input type="text" class="form-control" id="tcCertificateNo" name="tcCertificateNo" />
                        </div>
                        <div class="form-group col-md-6">
                            <label>STCW Code</label>
                            <input type="text" class="form-control" id="tcSTCW" name="tcSTCW" />
                        </div>


                        <div class="form-group col-md-6">
                            <label>Issue Date</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <input type="text" class="form-control" id="tcIssueDate" name="tcIssueDate" />
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <label>Expiry Date</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                <input type="text" class="form-control" id="tcExpiryDate" name="tcExpiryDate" />
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            <label>Place Issued</label>
                            <input type="text" class="form-control" id="tcPlaceIssued" name="tcPlaceIssued" />
                        </div>
                        <div class="form-group col-md-6">
                            <label>Issued by</label>
                            <input type="text" class="form-control" id="tcIssuedBy" name="tcIssuedBy" />
                        </div>
                        <div class="form-group col-md-6">
                            <label>Use for MLC Contract</label>
                            <input type="checkbox" value="MLC" id="tcMLC" name="tcMLC" />
                        </div>
                        <div class="form-group">
                            <label>File Attachment</label>
                            <input id="TrainingFileAttachment" title="Upload a attachment"
                                   type="file" name="TrainingFileAttachment" />
                        </div>
                    </div>
                    @Html.AntiForgeryToken()
                    &nbsp;
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary" id="btnTrainingCertificate">Save</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<!-- #endregion -->

<script>
    var table_training_certificate;
    $(document).ready(function () {
        $('#tcIssueDate').datepicker({
            startDate: '',
            format: 'mm/dd/yyyy',
            autoclose: true,
            todayHighlight: true
        });
        $('#tcExpiryDate').datepicker({
            startDate: '',
            format: 'mm/dd/yyyy',
            autoclose: true,
            todayHighlight: true
        });
        table_training_certificate = $("#data-table-training_certificate").DataTable({
            "scrollX": true,
            "ajax": {
                "url": "@Url.Action("GetTrainingCertificate", "Applicants")",
                "type": "GET",
                "datatype": "application/json",
                "data": { 'id': $('#Id').val() }
            },
            "lengthChange": false,
            "searching": false,
            dom: "Bfrtip",
            buttons: {
                buttons: [
                    {
                        text: "New Certificate",
                        action: function (e, dt, node, config) {
                            $('#trainingcertificates')[0].reset();
                            $('#modal-title').text("Add New");
                            $("#AddOrEditTrainings").modal();
                        }
                    }
                ],
                dom: {
                    button: {
                        tag: "button",
                        className: "btn btn-default btn-sm"
                    },
                    buttonLiner: {
                        tag: null
                    }
                }
            },
            "columns": [
                { data: "SeminarName" },
                { data: "TrainingCenterName" },
                { data: "CertificateNo" },
                {
                    'data': 'IssueDate',
                    'render': function (data) {
                        return moment(data).format("MMM DD,YYYY");
                    }
                },
                {
                    'data': 'ExpiryDate',
                    'render': function (data) {
                        return moment(data).format("MMM DD,YYYY");
                    }
                },
                { data: "PlaceIssued" },
                { data: "IssuedBy" },
                { data: "STCWCode" },
                { data: "MLC" },
                {
                    data: "FilePath",
                    render: function (data, type, row, meta) {
                        return (data === null) ? "" : '<button class="btn btn-default" title="' + data + '" onclick="viewFile(\'' + data + '\')"><i class="fa fa-paperclip fa-lg"></i></b>';
                    }
                },
                {
                    data: "Id",
                    render: function (data) {
                        return '<button type="button" class="btn btn-default "  title="Edit" onclick="edit_training_certificate(\'' + data + '\')"><i class="fa fa-edit"></i></button> ' +
                            '<button type="button" class="btn btn-danger" title="Delete" onclick="remove_training_certificate(\'' + data + '\')"><i class="fa fa-trash"></i></button>';
                    }
                }
            ],

        });

        $('#btnTrainingCertificate').on('click', function (e) {
            e.preventDefault();

            var formData = new FormData();
            var files = $('#TrainingFileAttachment')[0].files[0];
            formData.append('FileAttachment', files);
            formData.append('SeminarId', $('#tcSeminarId').val());
            formData.append('TrainingCenterId', $('#tcTrainingCenterId').val());
            formData.append('IssueDate', $('#tcIssueDate').val());
            formData.append('ExpiryDate', $('#tcExpiryDate').val());
            formData.append('IssuedBy', $('#tcIssuedBy').val());
            formData.append('CertificateNo', $('#tcCertificateNo').val());
            formData.append('PlaceIssued', $('#tcPlaceIssued').val());
            formData.append('STCWCode', $('#tcSTCW').val());
            formData.append('MLC', $('#tcMLC').val());
            formData.append('CrewId', $('#Id').val());
            formData.append('Id', $('#Idtc').val());
            $.ajax({
                type: "POST",
                url: "/Applicants/AddTrainingCertificates",
                data: formData,
                contentType: false,
                processData: false,
                dataType: "json",
                success: function (response) {
                    $('#AddOrEditTrainings').modal('hide');

                    table_training_certificate.ajax.reload();
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    });


    function remove_training_certificate(id) {
        bootbox.confirm("Are you sure you want to delete this record?", function (result) {
            if (result) {
                $.ajax({
                    url: "@Url.Action("DeleteTrainingCertificate","Applicants")/" + id,

                    success: function () {
                        table_training_certificate.ajax.reload();
                    }
                });
            }
        });
    }

    function edit_training_certificate(id) {
        $.ajax({
            type: "GET",
            url: "/Applicants/EdiTrainingCertificate",
            data: { 'id': id },
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $('#Idtc').val(response.Id);
                $('#tcSeminarId').val(response.SeminarId);
                $('#tcTrainingCenterId').val(response.TrainingCenterId);
                $('#tcCertificateNo').val(response.CertificateNo);
                $('#tcSTCW').val(response.STCWCode);
                $('#tcIssueDate').val(moment(response.IssueDate).format("MM/DD/YYYY"));
                $('#tcExpiryDate').val(moment(response.ExpiryDate).format("MM/DD/YYYY"));
                $('#tcIssuedBy').val(response.IssuedBy);
                $('#tcPlaceIssued').val(response.PlaceIssued);
                $('#tcMLC').val(response.MLC);
                $('#AddOrEditTrainings').modal('show');
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    }

</script>
